Description:
    Shaker Hussien - Deploy a high-availability web app using CloudFormation Project - Servers Stack

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    ImageID:
        Description: An environment name for Image Id used in Udagram deployment
        Type: AWS::EC2::Image::Id
        Default: ami-0729e439b6769d6ab

    InstanceType:
        Description: An environment name for Instance Type used in Udagram deployment
        Type: String
        Default: t2.medium

    UdagramKeyPair:
        Description: An environment name for SSH KeyPair used in Udagram App
        Type: String
        Default: UdagramKeyPair

Resources:

    UdagramLoadBalancerSG:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow http to our load balancer
            VpcId:
                Fn::ImportValue:
                    !Sub "${EnvironmentName}-VPCID"
            
            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
            
            SecurityGroupEgress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0

            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Load Balnacer SG

    UdagramLoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            Subnets:
            - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
            - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"

            SecurityGroups:
            - Ref: UdagramLoadBalancerSG

    Listener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            DefaultActions:
            - Type: forward
              TargetGroupArn: !Ref UdagramAppTargetGroup

            LoadBalancerArn: !Ref UdagramLoadBalancer
            Port: 80
            Protocol: HTTP

    LoadBalancerListenerRule:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
            Actions:
            - Type: forward
              TargetGroupArn:  !Ref UdagramAppTargetGroup

            Conditions:
            - Field: path-pattern
              Values: [/]

            ListenerArn: !Ref 'Listener'
            Priority: 1

    UdagramAppTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            HealthCheckIntervalSeconds: 10
            HealthCheckPath: /
            HealthCheckProtocol: HTTP
            HealthCheckTimeoutSeconds: 8
            HealthyThresholdCount: 2
            Port: 80
            Protocol: HTTP
            UnhealthyThresholdCount: 5
            VpcId: 
                Fn::ImportValue:
                    Fn::Sub: "${EnvironmentName}-VPCID"

# =======================================================================================

    UdagramServerSG:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow http to our hosts and SSH from local only
            VpcId:
                Fn::ImportValue:
                    !Sub "${EnvironmentName}-VPCID"

            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0

            - IpProtocol: tcp
              FromPort: 22
              ToPort: 22
              CidrIp: 0.0.0.0/0

            SecurityGroupEgress:
            - IpProtocol: tcp
              FromPort: 0
              ToPort: 65535
              CidrIp: 0.0.0.0/0

    UdagramLaunchConfig:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
            UserData:
                Fn::Base64: |
                    #!/bin/bash
                    apt-get update -y
                    apt-get install apache2 -y
                    systemctl start apache2.service
                    cd /var/www/html
                    echo "it works! Udagram, Udacity" > index.html
            ImageId: !Ref ImageID
            InstanceType: !Ref InstanceType
            IamInstanceProfile: !Ref ProfileWithRolesForUdagram
            SecurityGroups:
            - !Ref UdagramServerSG
            # KeyName: !Ref UdagramKeyPair
            BlockDeviceMappings:
            - DeviceName: "/dev/sdk"
              Ebs:
                VolumeSize: 10

    UdagramAutoScalingGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            VPCZoneIdentifier:
            - Fn::ImportValue: 
                !Sub "${EnvironmentName}-PRIV-NETS"
            LaunchConfigurationName: !Ref UdagramLaunchConfig
            MinSize: '4'
            MaxSize: '6'
            TargetGroupARNs:
            - !Ref UdagramAppTargetGroup

    UdagramIAMRole:
        Type: AWS::IAM::Role
        Properties:
            RoleName: 
                !Sub ${EnvironmentName}-Role
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                -   Effect: Allow
                    Principal:
                        Service:
                        - ec2.amazonaws.com
                    Action:
                    - sts:AssumeRole
            Path: "/"

    UdagramIAMPolicy:
        Type: AWS::IAM::Policy
        Properties:
            PolicyName: !Sub ${EnvironmentName}-Policy
            PolicyDocument:
                Version: '2012-10-17'
                Statement:
                - 
                    Effect: Allow
                    Action: 
                    -   s3:Get*
                    -   s3:List* 
                    Resource: 
                    -   arn:aws:s3:::udagram-bkt
                    -   arn:aws:s3:::udagram-bkt/*
            Roles:
            -   !Ref UdagramIAMRole

    ProfileWithRolesForUdagram:
        Type: AWS::IAM::InstanceProfile
        Properties: 
            Roles:
                - !Ref UdagramIAMRole

Outputs:

    UdagramLoadBalancerDNSName:
        Description: DNS name of the Udagram Load Balancer
        Value: !Join [ "", [ 'http://', !GetAtt UdagramLoadBalancer.DNSName ]]
        Export:
            Name: !Sub ${EnvironmentName}-DNS-LB          